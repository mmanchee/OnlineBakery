@using Microsoft.AspNetCore.Identity
@using Library.Models

@inject SignInManager<ApplicationUser> signInManager
@inject UserManager<ApplicationUser> userManager

<div id="header">
  @* <nav class="navbar fixed-top navbar-light bg-light">
    <a class="navbar-brand" href="\">The Library</a>
    <div class="std-btn">
    @if (signInManager.IsSignedIn(User))
    {
      
      @Html.ActionLink(" Books", "Index", "Books", null, new { @class = "btn btn-info fa fa-gear"})
      var currentUser = await userManager.GetUserAsync(User);

      var isAdmin = currentUser != null
          && await userManager.IsInRoleAsync(
              currentUser,
              Constants.AdministratorRole);

      if (isAdmin)
      {
        @Html.ActionLink(" Copies", "Index", "Copies", null, new { @class = "btn btn-info fa fa-gear"})
        @Html.ActionLink(" Manage Users", "Index", "ManageUsers", null, new { @class = "btn btn-info fa fa-gear"})
        @Html.ActionLink(" Edit Authors", "Index", "Books", null, new { @class = "btn btn-info fa fa-Book"})
      }
    }
    </div>
    @if (User.Identity.IsAuthenticated)
    {
      <div class="userinfo">
        @User.Identity.Name
        @Html.ActionLink("Log Off", "Index","Account", null, new { @class = "btn btn-info"})
      </div>
    }
    else
    {
      <div class="userinfo">
        @Html.ActionLink(" Log in", "Login", "Account", null, new { @class = "btn btn-info fa fa-plus" })
      </div>
    }
    
    </nav> *@
  </div